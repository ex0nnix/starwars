{"version":3,"sources":["api/index.ts","components/Film/Film.tsx","components/Species/Species.tsx","components/Person/Person.tsx","components/People/People.tsx","components/App/App.tsx","index.tsx"],"names":["url","init","a","fetch","headers","Accept","response","json","Film","filmUrl","useState","undefined","film","setFilm","useEffect","fetchFilm","then","filmResponse","style","paddingBottom","marginBottom","title","Item","label","director","producer","release_date","opening_crawl","Species","speciesUrl","species","setSpecies","fetchSpecies","name","average_height","average_lifespan","classification","designation","eye_colors","hair_colors","skin_colors","language","Person","person","height","mass","eye_color","hair_color","skin_color","gender","birth_year","vehicles","length","starships","films","map","s","Search","Input","People","people","setPeople","peopleFiltered","setPeopleFiltered","loading","setLoading","searching","setSearching","isModalVisible","setVisible","selectedPerson","setPerson","columns","dataIndex","key","render","text","record","size","onClick","fetchJson","peopleResponse","results","onSearch","input","filter","f","toLowerCase","includes","hideModal","padding","width","placeholder","allowClear","onChange","e","target","value","dataSource","pagination","top","visible","footer","onOk","onCancel","destroyOnClose","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb3b4185.chunk.js","sourcesContent":["export async function fetchJson<Response = any>(url: string, init?: RequestInit): Promise<Response> {\n  const response = await fetch(\n    `https://swapi.dev/api/${url}/`,\n    {\n      ...init ?? {},\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }\n    })\n\n\n  return response.json()\n}\n\n\nexport async function fetchFilm<Response = any>(url: string, init?: RequestInit): Promise<Response> {\n  const response = await fetch(\n    `${url}`,\n    {\n      ...init ?? {},\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }\n    })\n\n\n  return response.json()\n}\n\n\nexport async function fetchSpecies<Response = any>(url: string, init?: RequestInit): Promise<Response> {\n  const response = await fetch(\n    `${url}`,\n    {\n      ...init ?? {},\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      }\n    })\n\n\n  return response.json()\n}\n","import { Card, Descriptions,Skeleton } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { fetchFilm } from '../../api';\nimport { FilmType } from '../../types';\n\ninterface FilmProps {\n  filmUrl: string\n}\n\nfunction Film({ filmUrl }: FilmProps) {\n  const [film, setFilm] = useState<FilmType| undefined>(undefined);\n\n  useEffect(() => {\n    fetchFilm(filmUrl)\n      .then((filmResponse:FilmType) => {\n        setFilm(filmResponse);\n      });\n  }, [filmUrl]);\n  \n  if(!filmUrl || !film){\n    return <Skeleton />\n  }\n\n  return (\n    <Card style={{paddingBottom:\"10px\", marginBottom:\"10px\"}}>\n      <Descriptions title={film.title}>\n        <Descriptions.Item label=\"Director\">{film.director}</Descriptions.Item>\n        <Descriptions.Item label=\"Producer\">{film.producer}</Descriptions.Item>\n        <Descriptions.Item label=\"Release Date\">{film.release_date}</Descriptions.Item>\n      </Descriptions>\n      <p>{film.opening_crawl}</p>\n    </Card>\n  )\n}\n\nexport default Film;\n","import { Card, Descriptions,Skeleton } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { fetchSpecies } from '../../api';\nimport { SpeciesType } from '../../types';\n\ninterface SpeciesProps {\n  speciesUrl: string\n}\n\nfunction Species({ speciesUrl }: SpeciesProps) {\n  const [species, setSpecies] = useState<SpeciesType| undefined>(undefined);\n\n  useEffect(() => {\n    fetchSpecies(speciesUrl)\n      .then((filmResponse:SpeciesType) => {\n        setSpecies(filmResponse);\n      });\n  }, [speciesUrl]);\n  \n  if(!speciesUrl || !species){\n    return <Skeleton />\n  }\n\n  return (\n    <Card style={{paddingBottom:\"10px\", marginBottom:\"10px\"}}>\n      <Descriptions title={species.name}>\n        <Descriptions.Item label=\"Avg Height\">{species.average_height}</Descriptions.Item>\n        <Descriptions.Item label=\"Life Span\">{species.average_lifespan}</Descriptions.Item>\n        <Descriptions.Item label=\"Classification\">{species.classification}</Descriptions.Item>\n        <Descriptions.Item label=\"Designation\">{species.designation}</Descriptions.Item>\n        <Descriptions.Item label=\"Eye Color\">{species.eye_colors}</Descriptions.Item>\n        <Descriptions.Item label=\"Hair Color\">{species.hair_colors}</Descriptions.Item>\n        <Descriptions.Item label=\"Skin Color\">{species.skin_colors}</Descriptions.Item>\n        <Descriptions.Item label=\"Language\">{species.language}</Descriptions.Item>\n      </Descriptions>\n    </Card>\n  )\n}\n\nexport default Species;\n","import { Descriptions,Skeleton } from 'antd';\nimport { PersonType } from '../../types';\nimport Film from '../Film';\nimport Species from '../Species';\n\ninterface PersonProps {\n  person: PersonType | undefined\n}\n\nfunction Person({ person }: PersonProps) {\n  if(!person){\n    return <Skeleton />\n  }\n  return (\n    <div>\n      <Descriptions title={person.name + \" Info\"}>\n      <Descriptions.Item label=\"Height\">{person.height}</Descriptions.Item>\n      <Descriptions.Item label=\"Weight\">{person.mass}</Descriptions.Item>\n      <Descriptions.Item label=\"Eye Color\">{person.eye_color}</Descriptions.Item>\n      <Descriptions.Item label=\"Hair Color\">{person.hair_color}</Descriptions.Item>\n      <Descriptions.Item label=\"Skin Color\">{person.skin_color}</Descriptions.Item>\n      <Descriptions.Item label=\"Gender\">{person.gender}</Descriptions.Item>\n      <Descriptions.Item label=\"Birth Year\">{person.birth_year}</Descriptions.Item>\n      <Descriptions.Item label=\"Vehicles\">{person.vehicles.length}</Descriptions.Item>\n      <Descriptions.Item label=\"Starships\">{person.starships.length}</Descriptions.Item>\n    </Descriptions>\n    <br />\n    <h4>Films</h4>\n      {person.films && person.films.map(film => <Film filmUrl={film} />)}\n    <br />\n    <h4>Species</h4>\n      {person.species && person.species.map(s => <Species speciesUrl={s} />)}\n      {person.species.length === 0 && <p>No species found</p>}\n    </div>\n  )\n}\n\nexport default Person\n","import React, {useEffect, useState} from 'react'\nimport { Table, Space, Input, Modal, Button } from 'antd';\nimport { fetchJson } from '../../api'\nimport { PersonType } from '../../types'\nimport Person from '../Person'\n\nconst { Search } = Input;\n\nfunction People() {\n  const [people, setPeople] = useState<PersonType[]>([]);\n  const [peopleFiltered, setPeopleFiltered] = useState<PersonType[]>([]);\n  //\n  const [loading, setLoading] = useState<boolean>(true);\n  const [searching, setSearching] = useState<boolean>(false);\n  //\n  const [isModalVisible, setVisible] = useState(false);\n  const [selectedPerson, setPerson] = useState<PersonType|undefined>(undefined);\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n    },\n    {\n      title: 'Height',\n      dataIndex: 'height',\n      key: 'height',\n    },\n    {\n      title: 'Mass',\n      dataIndex: 'mass',\n      key: 'mass',\n    },\n    {\n      title: 'Hair Color',\n      dataIndex: 'hair_color',\n      key: 'hair_color',\n    },\n    {\n      title: 'Skin Color',\n      dataIndex: 'skin_color',\n      key: 'skin_color',\n    },\n    {\n      title: 'Eye Color',\n      dataIndex: 'eye_color',\n      key: 'eye_color',\n    },\n    {\n      title: 'Gender',\n      dataIndex: 'gender',\n      key: 'gender',\n    },\n    {\n      title: \"View Details\",\n      key: 'action',\n      render: (text: any, record: any) => (\n        <Space size=\"middle\">\n          <Button onClick={() => {\n            setPerson(record);\n            setVisible(true)\n            }\n          }>View</Button>\n        </Space>\n      ),\n    },\n  ];\n\n\n  useEffect(() => {\n    fetchJson<{ results: PersonType[] }>('people')\n      .then(peopleResponse => {\n        setPeople(peopleResponse.results);\n        setLoading(false);\n      });\n  }, []);\n\n  const onSearch = (input: string) => {\n    const filter = people.filter(f => f.name.toLowerCase().includes(input.toLowerCase()));\n    setPeopleFiltered([...filter])\n    setSearching(input !== \"\");\n  };\n\n  const hideModal = () => {\n    setVisible(false);\n    setPerson(undefined);\n  };\n\n  return (\n    <div style={{padding:\"25px\"}}> \n      <Search width={\"100%\"} \n        placeholder=\"Search \" \n        allowClear \n        onSearch={onSearch} \n        onChange={(e) =>onSearch(e.target?.value)}\n      \n      />\n      <Table \n        columns={columns} \n        key={\"name\"}\n        dataSource={searching ? peopleFiltered :  people} \n        pagination={false}\n        loading={loading}\n      />\n      <Modal\n          title=\"View Details\"\n          style={{ top: 20 }}\n          visible={isModalVisible}\n          width={\"90%\"}\n          footer={null}\n          onOk={hideModal}\n          onCancel={hideModal}\n          destroyOnClose={true}\n        >\n          <Person person={selectedPerson} />\n        </Modal>\n    </div>\n  )\n}\n\nexport default People\n","import People from '../People';\n\nfunction App() {\n  return (\n    <People />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}